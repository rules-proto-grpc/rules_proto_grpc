module(
    name = "rules_proto_grpc_scala",
    version = "0.0.0.rpg.version.placeholder",
    compatibility_level = 1,
)

bazel_dep(name = "rules_java", version = "8.12.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "rules_proto_grpc", version = "0.0.0.rpg.version.placeholder")
bazel_dep(name = "rules_scala", version = "7.0.0")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "rules_proto_grpc_scala_maven_common",  # Deconflict
    artifacts = [
        "io.grpc:grpc-api:1.72.0",
        "io.grpc:grpc-netty:1.72.0",
        "io.grpc:grpc-protobuf:1.72.0",
        "io.grpc:grpc-stub:1.72.0",
    ],
    strict_visibility = True,
)
use_repo(maven, "rules_proto_grpc_scala_maven_common")

maven.install(
    name = "rules_proto_grpc_scala_maven_2_12",  # Deconflict
    artifacts = [
        "com.thesamet.scalapb:compilerplugin_2.12:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime_2.12:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime-grpc_2.12:0.11.17",
    ],
    strict_visibility = True,
)
use_repo(maven, "rules_proto_grpc_scala_maven_2_12")

maven.install(
    name = "rules_proto_grpc_scala_maven_2_13",  # Deconflict
    artifacts = [
        "com.thesamet.scalapb:compilerplugin_2.13:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime_2.13:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime-grpc_2.13:0.11.17",
    ],
    strict_visibility = True,
)
use_repo(maven, "rules_proto_grpc_scala_maven_2_13")

maven.install(
    name = "rules_proto_grpc_scala_maven_3",  # Deconflict
    artifacts = [
        "com.thesamet.scalapb:compilerplugin_3:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime_3:0.11.17",
        "com.thesamet.scalapb:scalapb-runtime-grpc_3:0.11.17",
    ],
    strict_visibility = True,
)
use_repo(maven, "rules_proto_grpc_scala_maven_3")

scala_deps = use_extension("@rules_scala//scala/extensions:deps.bzl", "scala_deps")
scala_deps.scala()

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
use_repo(scala_config, "rules_scala_config")
